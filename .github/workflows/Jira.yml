name: Jira

on:
  create:
  pull_request:
    # пока для тестов будет запускаться для всех ивентов
    types: [opened, reopened, closed, synchronize]

jobs:
  update-jira-board-on-create:
    name: "Update Jira Board on branch create"
    runs-on: ubuntu-latest
    # if: ${{ github.event_name == 'create' }}
    steps:
    - name: Get issues keys
      id: issues_keys
      env:
        branch_name: ${{ github.head_ref }}
      run: |
        keys=$(echo $branch_name | grep -E -o "SPT-[0-9]{1,}")
        echo "${keys}"
        echo "issues_keys=${keys}" >> $GITHUB_OUTPUT

    - name: Update tasks on Jira board
      env:
        issue_keys: ${{ steps.issues_keys.outputs.issues_keys }}
        # api: ${{ secrets.API }}
      run: |
        for issue_key in $issue_keys; do
          echo $issue_key
          # curl -d "status_name=In Progress&issue_key=$issue_key" -X POST $api
        done
        
      

  update-jira-board:
    name: "Update Jira Board"
    runs-on: ubuntu-latest
    steps:
    - name: Get issues keys
      id: issues_keys
      env:
        pr_title: ${{ github.event.pull_request.title }}
      run: |
        keys=$(echo $pr_title | grep -E -o "SPT-[0-9]{1,}")
        echo "${keys}"
        echo "issues_keys=${keys}" >> $GITHUB_OUTPUT

    - name: Resolve issues status
      id: issues_status
      env:
        pr_state: ${{ github.event.pull_request.state }}
        pr_is_merged: ${{ github.event.pull_request.merged }}
      run: |
        echo "PR state: $pr_state; is merged: $pr_is_merged"
        
        if [[ "$pr_state" == "open" ]]; then
          issues_status="Code Review"
        elif [[ $pr_is_merged == true ]]; then
          issues_status="Done"
        else
          issues_status="Reopened"
        fi

        echo "issues_status=${issues_status}" >> $GITHUB_OUTPUT
        echo "Issues status: $issues_status"

    - name: Update tasks on Jira board
      env:
        issue_keys: ${{ steps.issues_keys.outputs.issues_keys }}
        issues_status: ${{ steps.issues_status.outputs.issues_status }}
        # api: ${{ secrets.API }}
      run: |
        for issue_key in $issue_keys; do
          echo $issue_key
          # curl -d "status_name=$issues_status&issue_key=$issue_key" -X POST $api
        done
        

        
  
  
